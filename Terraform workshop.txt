
https://github.com/looselytyped/terraform-workshop

https://www.manning.com/books/terraform-in-action
https://www.oreilly.com/library/view/terraform-up-and/9781098116736

Terraform workshop
-------------------

$ terraform init

$ terraform apply

$ terraform destroy

          RPC
Terraform ---> providers plugin (compiler)
                  |
                  | Golang
                  |       HTTP
               Client sdk ----> Cloud Provider


# contains terraform settings
terraform {
  required_version = ">= 0.13"
  required_providers {
    aws = {
      # shorthand for registry, terraform.io/hashicorp/aws
      source = "hashicorp/aws"
      version = "~>3.0"
    }
  }
}

# block configures the aws provider 
provider "aws" {
  region = "us-east-1"
  profile = "default"
}


  tags = {
    Terraform = true //pro-tip
  }

Terraform looks only in the directory it runs.

Terraform state shows what happened the last time you ran Terraform.

Any changes made on console will be overwritten next time script is run.

Terraform script - source of truth.
Tfstate matches resource name with arn

Terraform script - today 
Tfstate - past

If something is in script, and in console, but not on tfstate -> update

Refer to a different resource -> class_name.instance_name.parameter

TF first establishes dependencies.




